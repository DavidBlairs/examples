---
title: ADRS
order: 4
---

```{r setup, include = FALSE}
library(admiraldev)
```

The Response Analysis Dataset (`ADRS`) serves as a dataset in oncology clinical trials for monitoring disease response or progression and therapeutic efficacy. 

`ADRS` is structured to capture and organize data points pertinent to being able to subsequently derive common efficacy endpoints like Progression-Free Survival (PFS). PFS is a vital metric that measures the amount of time a patient lives without their disease worsening or death after commencing treatment.
 
Below you'll find instructions on creating an `ADRS` dataset tailored for PFS parameters using the `{admiral}` and `{admiralonco}` packages from the pharmaverse. 

### Required Packages
The packages below are required to construct an `ADRS` focusing on parameters that will be needed to construct a PFS time to event endpoint. 
```{r, output=FALSE}
library(admiral)
library(admiralonco)
library(pharmaverseadam)
library(pharmaversesdtm)
library(dplyr)
```

### Loading Data
Data necessary for the analysis is loaded from the `{pharmaverseadam}` and `{pharmaversestdm}` packages. 
```{r}
data("adsl")
data("rs_onco_recist")

rs <- rs_onco_recist
rs <- convert_blanks_to_na(rs)
```

`adsl` contains subject-level data and `rs_onco_recist` holds oncology-specific response data.

### Merging Data
`RANDDT` (randomization date) is merged  from `adsl` into `rs`, aligning data by study and subject identifiers. 
```{r}
adsl_vars <- exprs(RANDDT)
adrs <- derive_vars_merged(
  rs,
  dataset_add = adsl,
  new_vars = adsl_vars,
  by_vars = exprs(STUDYID, USUBJID)
)
```

### Preprocessing 
The data is filtered to include only investigators overall responses and new columns are added to categorize the type of response. Some minor modifications are made to rename `RSSTRESC` to `AVALC` and map character response values in `AVALC` to numeric in `AVAL`.
```{r}
adrs <- adrs |>
  filter(RSEVAL == "INVESTIGATOR" & RSTESTCD == "OVRLRESP") |>
  mutate(
    PARAMCD = "OVR",
    PARAM = "Overall Response by Investigator",
    PARCAT1 = "Tumor Response",
    PARCAT2 = "Investigator",
    PARCAT3 = "RECIST 1.1"
  )

adrs <- adrs |>
  mutate(
    AVALC = RSSTRESC,
    AVAL = aval_resp(AVALC)
  )
```

### Handling Date Variables
Missing parts of dates are imputed, assuming the last possible date. Further information can be found in the `admiral` documentation [here](https://pharmaverse.github.io/admiral/reference/derive_vars_dt.html)

```{r}
adrs <- adrs |>
  derive_vars_dt(
    dtc = RSDTC,
    new_vars_prefix = "A",
    highest_imputation = "D",
    date_imputation = "last"
  ) |>
  mutate(AVISIT = VISIT)
```

### Applying the Worst Response Function
A function is constructed to rank responses from worst to best. The `admiral::derive_var_relative_flag()` function is then used to create a flag (`ANL01FL`) for the worst response at each date for further analysis, considering only valid assessments from the randomization date onwards. 

```{r}
worst_resp <- function(arg) {
  case_when(
    arg == "NE" ~ 1,
    arg == "CR" ~ 2,
    arg == "PR" ~ 3,
    arg == "SD" ~ 4,
    arg == "NON-CR/NON-PD" ~ 5,
    arg == "PD" ~ 6,
    TRUE ~ 0
  )
}

adrs <- adrs |>
  restrict_derivation(
    derivation = derive_var_extreme_flag,
    args = params(
      by_vars = exprs(STUDYID, USUBJID, ADT),
      order = exprs(worst_resp(AVALC), RSSEQ),
      new_var = ANL01FL,
      mode = "last"
    ),
    filter = !is.na(AVAL) & ADT >= RANDDT
  )
```

### Flagging Progressive Disease
The records up to the first occurrence of progressive disease are flagged, a critical endpoint in oncology studies. 
```{r}
adrs <- adrs |>
  derive_var_relative_flag(
    by_vars = exprs(STUDYID, USUBJID),
    order = exprs(ADT, RSSEQ),
    new_var = ANL02FL,
    condition = AVALC == "PD",
    mode = "first",
    selection = "before",
    inclusive = TRUE
  )
```

### Deriving Parameters for Progressive Disease and Last Assessment 
The first instance of disease progression for each subject is derived. This is specifically marked by the endpoint 'PD' (Progressive Disease). 
```{r}
adrs <- adrs |>
  derive_extreme_records(
    dataset_ref = adsl,
    dataset_add = adrs,
    by_vars = exprs(STUDYID, USUBJID),
    filter_add = PARAMCD == "OVR" & AVALC == "PD" & ANL01FL == "Y",
    order = exprs(ADT, RSSEQ),
    mode = "first",
    exist_flag = AVALC,
    false_value = "N",
    set_values_to = exprs(
      PARAMCD = "PD",
      PARAM = "Disease Progression by Investigator",
      PARCAT1 = "Tumor Response",
      PARCAT2 = "Investigator",
      PARCAT3 = "RECIST 1.1",
      AVAL = yn_to_numeric(AVALC),
      ANL01FL = "Y"
    )
  )
```

### Handling Death Data
We next need to process the death data. The function `admiral::derive_extreme_records()` is used to identify a death event for each patient.
```{r}
adsldth <- adsl |>
  select(STUDYID, USUBJID, DTHDT, !!!adsl_vars)

adrs <- adrs |>
  derive_extreme_records(
    dataset_ref = adsldth,
    dataset_add = adsldth,
    by_vars = exprs(STUDYID, USUBJID),
    filter_add = !is.na(DTHDT),
    exist_flag = AVALC,
    false_value = "N",
    set_values_to = exprs(
      PARAMCD = "DEATH",
      PARAM = "Death",
      PARCAT1 = "Reference Event",
      AVAL = yn_to_numeric(AVALC),
      ANL01FL = "Y",
      ADT = DTHDT
    )
  ) |>
  select(-DTHDT)
```

### Merging Additional ADSL Variables
Additional variables are merged from `adsl` into the dataset, enriching it with more subject-level details. 
```{r}
adrs <- adrs |>
  derive_vars_merged(
    dataset_add = select(adsl, !!!negate_vars(adsl_vars)),
    by_vars = exprs(STUDYID, USUBJID)
  )
```

### Result
We've successfully constructed our final `ADRS` dataset. Below, you can find a selection of columns that contain the most critical information.

```{r echo=FALSE}
adrs_vig <- adrs |> 
  select(PARAMCD, PARAM, PARCAT1, PARCAT2, PARCAT3,
         ADT, AVALC, AVAL, ANL01FL)

dataset_vignette(
  dataset = adrs |> head(),
  display_vars = exprs(PARAMCD, PARAM, PARCAT1, PARCAT2, PARCAT3,
         ADT, AVALC, AVAL, ANL01FL, ANL02FL, RSDTC) 
)
```

In this dataset: 

- **PARAMCD**: Represents the parameter code, here "OVR" for "Overall Response", indicating the type of data recorded.
- **PARAM**: Describes the content of the record, specifically "Overall Response by Investigator", indicating it reflects the investigator's assessment of patient response.
- **PARCAT1**: Category of the parameter, "Tumor Response", classifying the type of outcome measured.
- **PARCAT2**: Indicates the assessor, here "Investigator", showing who evaluated the response.
- **PARCAT3**: Denotes the criteria used, "RECIST 1.1", which is a standard for assessing solid tumor response in trials.
- **ADT**: The actual date of the assessment, showing when each response was evaluated. 
